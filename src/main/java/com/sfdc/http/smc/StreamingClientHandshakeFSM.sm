%{
//
// Author: Prashant Srinivasan
//
%}

%import com.ning.http.client.Cookie
%import java.util.List
%import java.util.concurrent.Future
%import com.ning.http.client.Response

%class StreamingClient
%package com.sfdc.http.smc
//%fsmclass StreamingClientFSM
//%access package

%start FSM::Initial
%map FSM
%%

Initial
        Entry  //entry action
         {
             startHandshake();
         }
{
        onStartingHandshake(future: Future<Response>) // Transition
        Handshaking // End state
        {
            // Actions go here
        }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

Handshaking
{
    onHandshakeComplete(cookies: List<Cookie>, clientId: String) // Transition
        Handshaken // End state
        {
            // Actions go here
        }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);

         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

Handshaken
        Entry  //entry action
         {
             //startSubscribe();
         }
{
         onStartingSubscribe(future: Future<Response>) // Transition
         Subscribing // End state
         {
                     // Actions go here
         }
         onInvalidAuthCredentials(response: Response)
         ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

Subscribing
{
    onSubscribeComplete() // Transition
        Subscribed // End state
        {
            // Actions go here
        }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

Subscribed
        Entry  //entry action
         {
             startConnect();
         }
{
                 onStartingConnect(future: Future<Response>) // Transition
                 Connected // End state
                 {
                     // Actions go here
                 }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

// now, our http client cannot tell us when a tcp connection was established, so there is no
// "Connected" state.
// If we wait for the http response we'd be out of the connected state :)
// So we just assume we connected correctly and handle errors in transitions.
Connected
{
    onConnectComplete() // Transition
        Disconnected // End state
        {
            // Actions go here
        }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}

Disconnected
        Entry  //entry action
         {
             shouldWeReconnect();
         }
{
    onReconnectRequest() // Transition
        Reconnecting // End state
        {
            // Actions go here
        }
    onFinishedScenario() // Transition
        Done // End state
         {
             // Actions go here
         }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}


Reconnecting
         Entry  //entry action
          {
              startConnect();
          }
{
          onStartingConnect(future: Future<Response>) // Transition
          Connected // End state
          {
                     // Actions go here
          }
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
         onUnknownClientId(response: Response)
         ClientAborted
         {
           abortClientDueToUnknownClientId(response);
         }
        onOtherHttpErrorCode(response: Response)
        ClientAborted
         {
           abortClientDueToOtherHttpErrorCode(response);
         }
}


Done
        Entry  //entry action
         {
             clientDone();
         }

{

}
ClientAborted
    Entry
    {
        clientAborted();
    }
{
        onInvalidAuthCredentials(response: Response)
        ClientAborted
         {
           abortClientDueToBadCredentials(response);
         }
        on500Error(response: Response)
        ClientAborted
         {
           abortClientDueTo500(response);
         }
}
%%